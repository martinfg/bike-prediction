global:

  # default name of container inside pod
  defaultContainerName: c
  # for now some templates are assigned a nodeSelector to avoid being deployed
  # to a faulty node. A known working node is defined here.
  # (This first and foremost applies to pods with PVCs and the need for networking.)
  saveNode: &saveNode conway018

  timescaledb:
    host: &timescaleClusterName timescaledb
    port: 5432
    credentials:
      name: database-credentials
      databaseKey: database
      userKey: user
      passwordKey: password

  minio:
    credentials:
      name: minio-credentials
      tokenKey: token
      passwordKey: password

  containerRegistry:
    name: group8se4ai/
    credentials:
      name: registry-credentials

  grafana:
    credentials:
      user: admin
      password: admin


# === Dependencies ===

initdb:
  enabled: true
  credentials:
    user: group8
    database: db
    password:
  nodeSelector:   
    kubernetes.io/hostname: *saveNode

mockup:
  enabled: false
  nodeSelector:   
    kubernetes.io/hostname: *saveNode

transform_raw_nextbike_data:
  enabled: true
  nodeSelector:   
    kubernetes.io/hostname: *saveNode

minio:
  token: mzkZ98BKjvQo4F98
  key: # matching key for access token

containerRegistry:
  dockerconfig: # base64 encoded output of ~/.docker/config.json

datacollector: 
  enabled: true
  # when in debug mode, connection to bucket store is established but data not actually written
  debug: false

fastapi:
  enabled: true
  nodeSelector:   
    kubernetes.io/hostname: *saveNode

timescaledb-single:
  # admin guide: https://github.com/timescale/timescaledb-kubernetes/blob/master/charts/timescaledb-single/admin-guide.md
  # default values: https://github.com/timescale/timescaledb-kubernetes/blob/master/charts/timescaledb-single/values.yaml
  enabled: true
  # this is important to set here because it will be used for naming the service
  # by which the db is accessible from within the cluster
  clusterName: *timescaleClusterName
  # Node label to use for scheduling
  nodeSelector:   
    kubernetes.io/hostname: *saveNode
  # number of replicas
  replicaCount: 1
  # size of PVC
  persistentVolumes:
    data:
      size: 10Gi

grafana:
  enabled: true
  # Node label to use for scheduling
  nodeSelector:   
    kubernetes.io/hostname: *saveNode
  # disable role-based-access-control
  rbac:
    create: false
    pspEnabled: false
    useExistingRole: grafana-clusterrole
  # Use an existing secret for the admin user (this is part of the chart (./templates/grafana-credentials.yaml))
  admin:
    existingSecret: grafana-credentials
    userKey: user
    passwordKey: password
  # disable ingress and instead define it with on properties in ./templates/ingress.yaml
  ingress:
    enabled: false
  # grafana's primary configuration
  grafana.ini:
    server:
      root_url: http://localhost:3000/grafana
  # install additional plugins
  plugins: []
